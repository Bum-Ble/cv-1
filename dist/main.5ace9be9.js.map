{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,MAAM,61CAAV;AA8CA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,CAAC,GAAG,CAAC,CAAT;;AAEA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfD,EAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACAE,EAAAA,UAAU,CAAC,YAAM;AACf,QAAIJ,MAAM,CAACE,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACtB;AACAD,MAAAA,OAAO,IAAI,MAAX;AACD,KAHD,MAGM,IAAID,MAAM,CAACE,CAAD,CAAN,KAAc,GAAlB,EAAuB;AAC3BD,MAAAA,OAAO,IAAI,QAAX;AACD,KAFK,MAED;AACH;AACAA,MAAAA,OAAO,IAAID,MAAM,CAACE,CAAD,CAAjB;AACD;;AACDN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,OAAjB;AACAF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB,CAXe,CAYf;;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,KAAlB;AACAZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAgB,KAAhB;;AACA,QAAIN,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAgB,CAAxB,EAA2B;AACzBN,MAAAA,IAAI;AACL;AACF,GAlBS,EAkBR,EAlBQ,CAAV;AAmBD,CArBD;;AAsBAA,IAAI","file":"main.5ace9be9.js","sourceRoot":"../src","sourcesContent":["let html = document.querySelector(\"#html\")\nlet style = document.querySelector(\"#style\")\nlet string = `/* 你好，我是Bumble\n* 接下来我演示一下我的前端功底\n* 首先准备一个div\n**/\n#div1{\n  border: 1px solid red;\n  width: 200px;\n  height: 200px;\n}\n/* 接下来把div变成一个太极图\n* 注意看好了\n* 首先，把div变成一个圆\n**/\n#div1{\n  border-radius: 50%;\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\n  border: none;\n}\n/* 太极图是阴阳形成的\n* 一黑一白\n**/\n#div1{\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\n}\n/* 中间部分加两个圆 */\n#div1::before{\n  width: 100px;\n  height: 100px;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #000;\n  border-radius: 50%;\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\n}\n#div1::after{\n  width: 100px;\n  height: 100px;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #fff;\n  border-radius: 50%;\n  background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\n}\n`\nlet string2 = \"\"\nlet n = -1\n\nlet step = () => {\n  n = n + 1\n  setTimeout(() => {\n    if (string[n] === '\\n') {\n      // 如果是回车，就增加html的回车\n      string2 += '<br>'\n    }else if (string[n] === ' ') {\n      string2 += '&nbsp;'\n    }else{\n      // 如果不是回车，就照搬\n      string2 += string[n]\n    }\n    html.innerHTML = string2\n    style.innerHTML = string.substring(0,n)\n    // 滚动条始终滚到最下方\n    window.scrollTo(0,99999)\n    html.scrollTo(0,99999)\n    if (n < string.length - 1) {\n      step() \n    }\n  },50)\n}\nstep()"]}